
tesuto@dev1:~/code-samples/ansible$ ansible-playbook -i ansible_hosts combined_playbooks.yml

PLAY [Configure iBGP on routers using OC NetworkInstance Model with YDK] ***************************************************************************************************

TASK [configure BGP using YDK with GNMI] ***********************************************************************************************************************************
changed: [rtr4]
changed: [rtr1]

PLAY [routers_shell] *******************************************************************************************************************************************************

TASK [restart docker daemon and pull openr image] **************************************************************************************************************************
changed: [rtr4]
changed: [rtr3]
changed: [rtr1]
changed: [rtr2]

TASK [Copy run_openr script to rtr] ****************************************************************************************************************************************
ok: [rtr1]
ok: [rtr4]
ok: [rtr3]
changed: [rtr2]

TASK [Copy hosts_r file to rtr] ********************************************************************************************************************************************
changed: [rtr2]
ok: [rtr4]
ok: [rtr3]
ok: [rtr1]

TASK [Copy launch_openr script to rtr] *************************************************************************************************************************************
ok: [rtr1]
changed: [rtr2]
ok: [rtr3]
ok: [rtr4]

TASK [Check docker container is running] ***********************************************************************************************************************************
 [WARNING]: Consider using 'become', 'become_method', and 'become_user' rather than running sudo

changed: [rtr3]
changed: [rtr4]
changed: [rtr1]
fatal: [rtr2]: FAILED! => {"changed": true, "cmd": "sudo -i docker inspect --format={{.State.Running}} openr", "delta": "0:00:01.325359", "end": "2019-03-07 06:30:19.480717", "msg": "non-zero return code", "rc": 1, "start": "2019-03-07 06:30:18.155358", "stderr": "stty: standard input: Inappropriate ioctl for device\nstty: standard input: Inappropriate ioctl for device\nError: No such image or container: openr", "stderr_lines": ["stty: standard input: Inappropriate ioctl for device", "stty: standard input: Inappropriate ioctl for device", "Error: No such image or container: openr"], "stdout": "", "stdout_lines": []}                                                                 
...ignoring

TASK [debug] ***************************************************************************************************************************************************************
ok: [rtr1] => {
    "output.stdout_lines": [
        "", 
        "", 
        "####### Restart the docker daemon to make sure changes take effect######", 
        "", 
        "", 
        "###### Successfully restarted the docker daemon, response: ######", 
        "", 
        "['ztp-user connected from 127.0.0.1 using console on rtr1',", 
        " '\\x1b[?7hsysadmin-vm:0_RP0# run ssh 10.0.2.16 service docker restart',", 
        " 'Thu Mar  7  06:27:02.836 UTC',", 
        " 'docker stop/waiting',", 
        " 'docker start/running, process 21772',", 
        " 'sysadmin-vm:0_RP0#']", 
        "", 
        "###### return value in json: ######", 
        "", 
        "[", 
        "    \"ztp-user connected from 127.0.0.1 using console on rtr1\", ", 
        "    \"\\u001b[?7hsysadmin-vm:0_RP0# run ssh 10.0.2.16 service docker restart\", ", 
        "    \"Thu Mar  7  06:27:02.836 UTC\", ", 
        "    \"docker stop/waiting\", ", 
        "    \"docker start/running, process 21772\", ", 
        "    \"sysadmin-vm:0_RP0#\"", 
        "]", 
        "Sleeping for about 30 seconds, waiting for the docker daemon to be up", 
        "", 
        "#######Pulling the docker image for Open/R ######", 
        "", 
        "Successfully downloaded the docker image", 
        "Using default tag: latest", 
        "latest: Pulling from akshshar/openr-xr", 
        "Digest: sha256:0d81b575830fe776739f960870652c7d9da601eaf32f68fa5569e852a2c5d4b0", 
        "Status: Image is up to date for akshshar/openr-xr:latest", 
        ""
    ]
}
ok: [rtr2] => {
    "output.stdout_lines": [
        "", 
        "We trust you have received the usual lecture from the local System", 
        "Administrator. It usually boils down to these three things:", 
        "", 
        "    #1) Respect the privacy of others.", 
        "    #2) Think before you type.", 
        "    #3) With great power comes great responsibility.", 
        "", 
        "", 
        "", 
        "####### Restart the docker daemon to make sure changes take effect######", 
        "", 
        "", 
        "###### Successfully restarted the docker daemon, response: ######", 
        "", 
        "['ztp-user connected from 127.0.0.1 using console on host',", 
        " '\\x1b[?7hsysadmin-vm:0_RP0# run ssh 10.0.2.16 service docker restart',", 
        " 'Thu Mar  7  06:26:59.737 UTC',", 
        " 'docker stop/waiting',", 
        " 'docker start/running, process 5876',", 
        " 'sysadmin-vm:0_RP0#']", 
        "", 
        "###### return value in json: ######", 
        "", 
        "[", 
        "    \"ztp-user connected from 127.0.0.1 using console on host\", ", 
        "    \"\\u001b[?7hsysadmin-vm:0_RP0# run ssh 10.0.2.16 service docker restart\", ", 
        "    \"Thu Mar  7  06:26:59.737 UTC\", ", 
        "    \"docker stop/waiting\", ", 
        "    \"docker start/running, process 5876\", ", 
        "    \"sysadmin-vm:0_RP0#\"", 
        "]", 
        "Sleeping for about 30 seconds, waiting for the docker daemon to be up", 
        "", 
        "#######Pulling the docker image for Open/R ######", 
        "", 
        "Successfully downloaded the docker image", 
        "Using default tag: latest", 
        "latest: Pulling from akshshar/openr-xr", 
        "297061f60c36: Pulling fs layer", 
        "e9ccef17b516: Pulling fs layer", 
        "dbc33716854d: Pulling fs layer", 
        "8fe36b178d25: Pulling fs layer", 
        "686596545a94: Pulling fs layer", 
        "27531d038464: Pulling fs layer", 
        "8fe36b178d25: Waiting", 
        "686596545a94: Waiting", 
        "27531d038464: Waiting", 
        "e9ccef17b516: Verifying Checksum", 
        "e9ccef17b516: Download complete", 
        "dbc33716854d: Verifying Checksum", 
        "dbc33716854d: Download complete", 
        "297061f60c36: Verifying Checksum", 
        "297061f60c36: Download complete", 
        "297061f60c36: Pull complete", 
        "297061f60c36: Pull complete", 
        "e9ccef17b516: Pull complete", 
        "e9ccef17b516: Pull complete", 
        "dbc33716854d: Pull complete", 
        "dbc33716854d: Pull complete", 
        "686596545a94: Verifying Checksum", 
        "686596545a94: Download complete", 
        "8fe36b178d25: Verifying Checksum", 
        "8fe36b178d25: Download complete", 
        "8fe36b178d25: Pull complete", 
        "8fe36b178d25: Pull complete", 
        "686596545a94: Pull complete", 
        "686596545a94: Pull complete", 
        "27531d038464: Verifying Checksum", 
        "27531d038464: Download complete", 
        "27531d038464: Pull complete", 
        "27531d038464: Pull complete", 
        "Digest: sha256:0d81b575830fe776739f960870652c7d9da601eaf32f68fa5569e852a2c5d4b0", 
        "Status: Downloaded newer image for akshshar/openr-xr:latest", 
        ""
    ]
}
ok: [rtr3] => {
    "output.stdout_lines": [
        "", 
        "", 
        "####### Restart the docker daemon to make sure changes take effect######", 
        "", 
        "", 
        "###### Successfully restarted the docker daemon, response: ######", 
        "", 
        "['ztp-user connected from 127.0.0.1 using console on rtr3',", 
        " '\\x1b[?7hsysadmin-vm:0_RP0# run ssh 10.0.2.16 service docker restart',", 
        " 'Thu Mar  7  06:27:01.931 UTC',", 
        " 'docker stop/waiting',", 
        " 'docker start/running, process 11588',", 
        " 'sysadmin-vm:0_RP0#']", 
        "", 
        "###### return value in json: ######", 
        "", 
        "[", 
        "    \"ztp-user connected from 127.0.0.1 using console on rtr3\", ", 
        "    \"\\u001b[?7hsysadmin-vm:0_RP0# run ssh 10.0.2.16 service docker restart\", ", 
        "    \"Thu Mar  7  06:27:01.931 UTC\", ", 
        "    \"docker stop/waiting\", ", 
        "    \"docker start/running, process 11588\", ", 
        "    \"sysadmin-vm:0_RP0#\"", 
        "]", 
        "Sleeping for about 30 seconds, waiting for the docker daemon to be up", 
        "", 
        "#######Pulling the docker image for Open/R ######", 
        "", 
        "Successfully downloaded the docker image", 
        "Using default tag: latest", 
        "latest: Pulling from akshshar/openr-xr", 
        "Digest: sha256:0d81b575830fe776739f960870652c7d9da601eaf32f68fa5569e852a2c5d4b0", 
        "Status: Image is up to date for akshshar/openr-xr:latest", 
        ""
    ]
}
ok: [rtr4] => {
    "output.stdout_lines": [
        "", 
        "", 
        "####### Restart the docker daemon to make sure changes take effect######", 
        "", 
        "", 
        "###### Successfully restarted the docker daemon, response: ######", 
        "", 
        "['ztp-user connected from 127.0.0.1 using console on rtr4',", 
        " '\\x1b[?7hsysadmin-vm:0_RP0# run ssh 10.0.2.16 service docker restart',", 
        " 'Thu Mar  7  06:27:01.161 UTC',", 
        " 'docker stop/waiting',", 
        " 'docker start/running, process 20279',", 
        " 'sysadmin-vm:0_RP0#']", 
        "", 
        "###### return value in json: ######", 
        "", 
        "[", 
        "    \"ztp-user connected from 127.0.0.1 using console on rtr4\", ", 
        "    \"\\u001b[?7hsysadmin-vm:0_RP0# run ssh 10.0.2.16 service docker restart\", ", 
        "    \"Thu Mar  7  06:27:01.161 UTC\", ", 
        "    \"docker stop/waiting\", ", 
        "    \"docker start/running, process 20279\", ", 
        "    \"sysadmin-vm:0_RP0#\"", 
        "]", 
        "Sleeping for about 30 seconds, waiting for the docker daemon to be up", 
        "", 
        "#######Pulling the docker image for Open/R ######", 
        "", 
        "Successfully downloaded the docker image", 
        "Using default tag: latest", 
        "latest: Pulling from akshshar/openr-xr", 
        "Digest: sha256:0d81b575830fe776739f960870652c7d9da601eaf32f68fa5569e852a2c5d4b0", 
        "Status: Image is up to date for akshshar/openr-xr:latest", 
        ""
    ]
}

TASK [Clean up docker container if running] ********************************************************************************************************************************
skipping: [rtr2]
changed: [rtr3]
changed: [rtr1]
changed: [rtr4]

TASK [debug] ***************************************************************************************************************************************************************
ok: [rtr1] => {
    "output.stdout_lines": [
        "openr"
    ]
}
ok: [rtr2] => {
    "output.stdout_lines": "VARIABLE IS NOT DEFINED!"
}
ok: [rtr3] => {
    "output.stdout_lines": [
        "openr"
    ]
}
ok: [rtr4] => {
    "output.stdout_lines": [
        "openr"
    ]
}

TASK [Bring up the docker container] ***************************************************************************************************************************************
changed: [rtr1]
changed: [rtr4]
changed: [rtr3]
changed: [rtr2]

TASK [debug] ***************************************************************************************************************************************************************
ok: [rtr1] => {
    "output.stdout_lines": [
        "3274c502be86ceb64c2809abeda409bb0393009427b939f448b97063893303b3"
    ]
}
ok: [rtr2] => {
    "output.stdout_lines": [
        "42c2a67c99da4821db79da656ea49e32f32ab40b6f2ef83a8f545c2c01374079"
    ]
}
ok: [rtr3] => {
    "output.stdout_lines": [
        "87efba340ee65d35f784ddadd769b235b9abe91d19ab0d265971e90a289f0e28"
    ]
}
ok: [rtr4] => {
    "output.stdout_lines": [
        "254ddd99914533211a5ecadf5bcccc046743cf2e9f16056ebbda929027944f0d"
    ]
}

TASK [Pause the playbook to allow routes to be distributed before running the reachability playbook] ***********************************************************************
Pausing for 120 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [rtr1]

PLAY [Verify IPv4 connectivity to routes learnt via Open/R] ****************************************************************************************************************

TASK [Reachability of loopbacks learnt via Open/R] *************************************************************************************************************************
ok: [rtr4] => (item=172.16.1.1)
ok: [rtr3] => (item=172.16.1.1)
ok: [rtr1] => (item=172.16.1.1)
failed: [rtr4] (item=172.16.3.1) => {"changed": false, "item": "172.16.3.1", "msg": "Reachability validation failed (YClientError: Could not connect to 100.96.0.26)"}
failed: [rtr4] (item=172.16.4.1) => {"changed": false, "item": "172.16.4.1", "msg": "Reachability validation failed (YClientError: Could not connect to 100.96.0.26)"}
failed: [rtr2] (item=172.16.1.1) => {"changed": false, "item": "172.16.1.1", "msg": "Reachability validation failed ( <?xml version=\"1.0\"?>\n<rpc-reply xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\" message-id=\"1\">\n  <rpc-error>\n    <error-type>application</error-type>\n    <error-tag>operation-failed</error-tag>\n    <error-severity>error</error-severity>\n    <error-message xml:lang=\"en\">'IPv4PingTrace' detected the 'warning' condition 'Invalid Source Address'</error-message>\n  </rpc-error>\n</rpc-reply>\n)"}
ok: [rtr3] => (item=172.16.3.1)
ok: [rtr1] => (item=172.16.3.1)
failed: [rtr2] (item=172.16.3.1) => {"changed": false, "item": "172.16.3.1", "msg": "Reachability validation failed ( <?xml version=\"1.0\"?>\n<rpc-reply xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\" message-id=\"1\">\n  <rpc-error>\n    <error-type>application</error-type>\n    <error-tag>operation-failed</error-tag>\n    <error-severity>error</error-severity>\n    <error-message xml:lang=\"en\">'IPv4PingTrace' detected the 'warning' condition 'Invalid Source Address'</error-message>\n  </rpc-error>\n</rpc-reply>\n)"}
ok: [rtr3] => (item=172.16.4.1)
ok: [rtr1] => (item=172.16.4.1)
failed: [rtr2] (item=172.16.4.1) => {"changed": false, "item": "172.16.4.1", "msg": "Reachability validation failed ( <?xml version=\"1.0\"?>\n<rpc-reply xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\" message-id=\"1\">\n  <rpc-error>\n    <error-type>application</error-type>\n    <error-tag>operation-failed</error-tag>\n    <error-severity>error</error-severity>\n    <error-message xml:lang=\"en\">'IPv4PingTrace' detected the 'warning' condition 'Invalid Source Address'</error-message>\n  </rpc-error>\n</rpc-reply>\n)"}
        to retry, use: --limit @/home/tesuto/code-samples/ansible/combined_playbooks.retry

PLAY RECAP *****************************************************************************************************************************************************************
rtr1                       : ok=13   changed=5    unreachable=0    failed=0   
rtr2                       : ok=9    changed=6    unreachable=0    failed=1   
rtr3                       : ok=11   changed=4    unreachable=0    failed=0   
rtr4                       : ok=11   changed=5    unreachable=0    failed=1




tesuto@dev1:~/code-samples/ansible$ ansible-playbook -i ansible_hosts playbooks/reachability_check/ip_dest_reachable_ydk.yml 

PLAY [Verify IPv4 connectivity to routes learnt via Open/R] ****************************************************************************************************************

TASK [Reachability of loopbacks learnt via Open/R] *************************************************************************************************************************
ok: [rtr4] => (item=172.16.1.1)
ok: [rtr1] => (item=172.16.1.1)
ok: [rtr3] => (item=172.16.1.1)
ok: [rtr1] => (item=172.16.3.1)
ok: [rtr3] => (item=172.16.3.1)
ok: [rtr4] => (item=172.16.3.1)
ok: [rtr1] => (item=172.16.4.1)
ok: [rtr3] => (item=172.16.4.1)
ok: [rtr4] => (item=172.16.4.1)
failed: [rtr2] (item=172.16.1.1) => {"changed": false, "item": "172.16.1.1", "msg": "Success rate lower than expected (0<100)"}
failed: [rtr1] (item=172.16.2.1) => {"changed": false, "item": "172.16.2.1", "msg": "Success rate lower than expected (0<100)"}
failed: [rtr3] (item=172.16.2.1) => {"changed": false, "item": "172.16.2.1", "msg": "Success rate lower than expected (0<100)"}
failed: [rtr4] (item=172.16.2.1) => {"changed": false, "item": "172.16.2.1", "msg": "Success rate lower than expected (0<100)"}
failed: [rtr2] (item=172.16.3.1) => {"changed": false, "item": "172.16.3.1", "msg": "Success rate lower than expected (0<100)"}
failed: [rtr2] (item=172.16.4.1) => {"changed": false, "item": "172.16.4.1", "msg": "Success rate lower than expected (0<100)"}
ok: [rtr2] => (item=172.16.2.1)
        to retry, use: --limit @/home/tesuto/code-samples/ansible/playbooks/reachability_check/ip_dest_reachable_ydk.retry

PLAY RECAP *****************************************************************************************************************************************************************
rtr1                       : ok=0    changed=0    unreachable=0    failed=1   
rtr2                       : ok=0    changed=0    unreachable=0    failed=1   
rtr3                       : ok=0    changed=0    unreachable=0    failed=1   
rtr4                       : ok=0    changed=0    unreachable=0    failed=1   

tesuto@dev1:~/code-samples/ansible$ 




tesuto@dev1:~/code-samples/ansible$ ansible-playbook -i ansible_hosts playbooks/telemetry/telemetry_docker_bringup.yml

PLAY [dev1] ****************************************************************************************************************************************************************

TASK [Gathering Facts] *****************************************************************************************************************************************************
ok: [dev1]

TASK [check if docker present] *********************************************************************************************************************************************
changed: [dev1]

TASK [run telemetry container] *********************************************************************************************************************************************
changed: [dev1]

TASK [debug] ***************************************************************************************************************************************************************
ok: [dev1] => {
    "output.stdout_lines": "VARIABLE IS NOT DEFINED!"
}

PLAY RECAP *****************************************************************************************************************************************************************
dev1                       : ok=4    changed=2    unreachable=0    failed=0   
